name: Release

on:
  push:
    branches:
      - main

concurrency:
  group: release-${{ github.ref }}

env:
  CLI: supagrate
  GO_VERSION: 1.21.3
  NODE_VERSION: 20

jobs:
#  build:
#    name: Build
#    strategy:
#      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Setup Go
#        uses: actions/setup-go@v4
#        with:
#          go-version-file: go.mod
#          cache: true
#
#      - name: Install modules
#        run: go mod download
#
#      - name: Build ${{ matrix.os }} artifact
#        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
#        run: go build -o ./bin/${{ env.CLI }} .
#
#      - name: Build ${{ matrix.os }} artifact
#        if: ${{ matrix.os == 'windows-latest' }}
#        run: go build -o ./bin/${{ env.CLI }} .

  release:
    name: Release
    runs-on: ubuntu-latest
#    needs: build
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"

      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: go
          package-name: ${{ env.CLI }}
          extra-files: |
            package.json

      - name: Tag major and minor versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ env.GITHUB_REPOSITORY }}.git"
          git tag -d v${{ steps.release.outputs.major }} || true
          git tag -d v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} || true
          git tag -a v${{ steps.release.outputs.major }} -m "Release v${{ steps.release.outputs.major }}"
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}"
          git push origin v${{ steps.release.outputs.major }}
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}

      - name: Go Releaser
        uses: goreleaser/goreleaser-action@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: latest
          args: release --clean

      - name: Publish npm
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm dist-tag add "supagrate@v${{ steps.release.outputs.tag_name }} latest